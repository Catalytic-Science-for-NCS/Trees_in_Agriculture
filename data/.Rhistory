"total_prec", "surface_pr", "u_componen", "UNI_BIOTIC",
"geometry", "road_ID_distance")) %>% vect()
names(treelines) <- c("Field_ID","area_ha","slope", "elevation",
"mean_2m_air_temperature","v_component_wind","mean_sea_level_pressure",
"minimum_2m_air_temperature","dewpoint_2m_temperature","maximum_2m_air_temperature",
"total_precip", "surface_pressure", "u_component_wind", "UNI_BIOTIC",
"dist2road")
treelines$field_perimeter_m <- perim(treelines)
# perim_percent <- as.data.frame(treelines) %>%
#   group_by(Field_ID,Trees_PA) %>%
#   summarise(percent_perim_in_treeline = sum(field_line_length)/total_field_perim)
# #perim_percent <- perim_percent[!duplicated(perim_percent),]
#
# treelines <- merge(treelines, perim_percent)
treelines$trt_ID <- ifelse(treelines$Field_ID==12,1,0)
treelines$UNI_BIOTIC <- as.factor(treelines$UNI_BIOTIC)
treelines$dist2road <- as.numeric(treelines$dist2road)
####################################################
## calculate mean and sum hectares of cover and delta in t0 and t5
# delta_t0 <- rast("Colombia/huila_delta_30m_ag_t0_epsg9377.tif")
# delta_t5 <- rast("Colombia/huila_delta_30m_ag_t5_epsg9377.tif")
#
# cover_t0 <- rast("Colombia/huila_cover_30m_ag_t0_epsg9377.tif")
# cover_t5 <- rast("Colombia/huila_cover_30m_ag_t5_epsg9377.tif")
huila <- vect("Colombia/Departamentos_202112_shp/departamento.shp")
huila <- huila[huila$DeNombre=="Huila",] #1,813,707 ha total
recs <- vect("TIA/expertRecs_lessComplex.shp")
recs_huila <- subset(recs, recs$COUNTRY=="Colombia") %>% project(huila) %>% crop(huila)
fc <- rast("Colombia/huila_gee/tree_cover_2020_huila.tif") %>%
project("epsg:9377", method="bilinear")
f_nf <- ifel(fc>25,1,2)
bufs <- buffer(polys, width=-10)
bufs_inner <- erase(polys, bufs)
bufs_inner$buffer_area_ha <- expanse(bufs_inner)/10000
#for by field measures
fieldid <- unique(polys$Field_ID)
parcel_area <- c()
to_add <- c()
delta <- c()
for(i in fieldid){
r <- crop(fc, polys[polys$Field_ID==i,])
p <- as.polygons(r, dissolve=F) %>%
crop(polys[polys$Field_ID==i,])
p$expertrec <- 42
p$delta <- p$expertrec-p$tree_canopy_cover
p$area_ha <- expanse(p)/10000
p_buf <- crop(p, bufs_inner[bufs_inner$Field_ID==i,])
p_buf$area_ha <- expanse(p_buf)/10000
sum(p_buf$area_ha)
#do we need to check further into how much of parcel is >25%?
stopifnot(range(p_buf$tree_canopy_cover)[[2]]<=26)
plot(p, "delta")
plot(p_buf, add=T)
#what is total parcel area?
parcel_area <- c(parcel_area, sum(p$area_ha))
#do we need to check further into how much of parcel is >25%?
stopifnot(range(p$tree_canopy_cover)[[2]]<=26)
#what is delta area?
to_add <- c(to_add, sum(p$delta/100*p$area_ha))
}
plot(fc)
fc
f_nf
plot(f_bf)
plot(f_nf)
area_parcel_m2_list <- c()
percent_parcel_in_forest_cover_list <- c()
area_buffer_available_planting_m2_list<- c()
fieldid_list <- c()
area_buffer_m2_list <- c()
for(i in unique(polys$Field_ID)){
r <- crop(fc, polys[polys$Field_ID==i,]) %>% mask(polys[polys$Field_ID==i,])
x_parcel <- exact_extract(raster::raster(r), st_as_sf(polys[polys$Field_ID==i,]),
coverage_area = TRUE, include_area=TRUE, include_xy=TRUE) %>%
bind_rows()
x_parcel$percent_in_parcel <- x_parcel$coverage_area/x_parcel$area
x_buffer <- exact_extract(raster::raster(r), st_as_sf(bufs_inner[bufs_inner$Field_ID==i,]),
coverage_area = TRUE, include_area=TRUE, include_xy=TRUE) %>%
bind_rows()
x_buffer$percent_in_parcel <- x_buffer$coverage_area/x_buffer$area
r_df <- as.data.frame(r, xy=T, na.rm=T) %>%
inner_join(x_parcel[,c("x","y","area", "coverage_area", "percent_in_parcel")], by=c("x","y")) %>%
left_join(x_buffer[,c("x","y","coverage_area", "percent_in_parcel")], by=c("x","y"))
names(r_df) <- c("x","y","tree_canopy_cover","pixelarea_m2","area_pixel_in_parcel_m2","percent_pixel_in_parcel",
"area_pixel_in_buffer_m2", "percent_pixel_in_buffer")
area_buffer_m2 <- sum(r_df$area_pixel_in_buffer_m2, na.rm = T)
area_parcel_m2 <- sum(r_df$area_pixel_in_parcel_m2, na.rm = T)
r_df$forest_area_in_pixel_in_buffer_m2 <- r_df$tree_canopy_cover*r_df$area_pixel_in_buffer_m2/100
r_df$forest_area_in_pixel_in_parcel_m2 <- r_df$tree_canopy_cover*r_df$area_pixel_in_parcel_m2/100
percent_parcel_in_forest_cover <- sum(r_df$forest_area_in_pixel_in_parcel_m2, na.rm = T)/area_parcel_m2
forest_cover_in_buffer_as_total_parcel_m2 <- sum(r_df$forest_area_in_pixel_in_buffer_m2, na.rm = T)/area_parcel_m2
delta_percent <- 42 - percent_parcel_in_forest_cover
area_parcel_available_planting_m2 <- area_parcel_m2*delta_percent/100
area_buffer_available_planting_m2 <- (1-forest_cover_in_buffer_as_total_parcel_m2)*area_buffer_m2
area_parcel_outside_buffer_in_forest_cover_percent <- (percent_parcel_in_forest_cover - forest_cover_in_buffer_as_total_parcel_m2)*area_parcel_m2
buffer_over_parcel_percent <- area_buffer_m2/area_parcel_m2
print(buffer_over_parcel_percent > delta_percent)
#if answer to above is > delta_percent, adjust to be within TIA threshold
area_parcel_m2_list <- c(area_parcel_m2_list, area_parcel_m2)
percent_parcel_in_forest_cover_list <- c(percent_parcel_in_forest_cover_list, percent_parcel_in_forest_cover)
area_buffer_available_planting_m2_list <- c(area_buffer_available_planting_m2_list, area_buffer_available_planting_m2)
fieldid_list <- c(fieldid_list, i)
area_buffer_m2_list <- c(area_buffer_m2_list, area_buffer_m2)
}
df <- cbind(fieldid_list, area_parcel_m2_list) %>%
cbind(percent_parcel_in_forest_cover_list) %>%
cbind(area_buffer_available_planting_m2_list) %>%
cbind(area_buffer_m2_list) %>%
as.data.frame()
df
sum(df$area_buffer_available_planting_m2_list)
# ===============
# Description: make a figure comparing something to HDI
#
#
# ===============
# AUTHOR: Vivian Griffey
# Date created: 05/26/2023
# Date updated:
# ===============
# load libraries
library(tidyverse)
library(ggplot2)
library(countrycode)
library(ggpmisc)
library(ggpmisc)
remove.packages("ggpmisc")
# ===============
# Description: make a figure comparing something to HDI
#
#
# ===============
# AUTHOR: Vivian Griffey
# Date created: 05/26/2023
# Date updated:
# ===============
# load libraries
library(tidyverse)
library(ggplot2)
library(countrycode)
library(ggpmisc)
install.packages("gpp")
install.packages("ggpp")
install.packages("ggpp")
library(ggpmisc)
setwd("GitHub/Trees_in_Agriculture/data/")
hdi <- readxl::read_xlsx("HDR21-22_Statistical_Annex_HDI_Table.xlsx", sheet=1)
hdi <- hdi[-c(1:7, 199:nrow(hdi)), -c(4:15)]
names(hdi) <- c("Rank","Country","HDI")
hdi <- hdi[-grep("DEVELOPMENT", hdi$Country, ignore.case = T),]
hdi$ISO3 <- countrycode(hdi$Country, origin="country.name", destination="iso3c", warn=T)
hdi$ISO3[hdi$Country=="Türkiye"] <- "TUR"
tia <- read.csv("02_17_2023/country_results_03172023.csv")
tia <- tia[, c("ISO3","NAME","Crop_TotalC_sum_MgC","Graze_TotalC_sum_MgC",
"Crop_FluxDensity_mean_MgC.ha_CORRECT",
"Graze_FluxDensity_mean_MgC.ha_CORRECT")]
hdi <- readxl::read_xlsx("HDR21-22_Statistical_Annex_HDI_Table.xlsx", sheet=1)
hdi <- hdi[-c(1:7, 199:nrow(hdi)), -c(4:15)]
names(hdi) <- c("Rank","Country","HDI")
hdi <- hdi[-grep("DEVELOPMENT", hdi$Country, ignore.case = T),]
hdi$ISO3 <- countrycode(hdi$Country, origin="country.name", destination="iso3c", warn=T)
# ===============
# Description: make a figure comparing something to HDI
#
#
# ===============
# AUTHOR: Vivian Griffey
# Date created: 05/26/2023
# Date updated:
# ===============
# load libraries
library(tidyverse)
library(ggplot2)
library(countrycode)
library(ggpmisc)
setwd("GitHub/Trees_in_Agriculture/data/")
hdi <- readxl::read_xlsx("HDR21-22_Statistical_Annex_HDI_Table.xlsx", sheet=1)
hdi <- hdi[-c(1:7, 199:nrow(hdi)), -c(4:15)]
getwd()
hdi <- readxl::read_xlsx("HDR21-22_Statistical_Annex_HDI_Table.xlsx", sheet=1)
hdi <- hdi[-c(1:7, 199:nrow(hdi)), -c(4:15)]
names(hdi) <- c("Rank","Country","HDI")
hdi <- hdi[-grep("DEVELOPMENT", hdi$Country, ignore.case = T),]
hdi$ISO3 <- countrycode(hdi$Country, origin="country.name", destination="iso3c", warn=T)
hdi$ISO3[hdi$Country=="Türkiye"] <- "TUR"
tia <- read.csv("02_17_2023/country_results_03172023.csv")
tia <- tia[, c("ISO3","NAME","Crop_TotalC_sum_MgC","Graze_TotalC_sum_MgC",
"Crop_FluxDensity_mean_MgC.ha_CORRECT",
"Graze_FluxDensity_mean_MgC.ha_CORRECT")]
df <- inner_join(tia, hdi, by="ISO3")
df_long <- reshape::melt(df, id.vars=c("ISO3","Country", "NAME", "HDI"))
df_long$value <- as.numeric(df_long$value)
df_long$HDI <- as.numeric(df_long$HDI)
ggplot(df_long[df_long$variable=="Crop_FluxDensity_mean_MgC.ha_CORRECT" | df_long$variable=="Graze_FluxDensity_mean_MgC.ha_CORRECT",],
aes(x=HDI, y=value, col=variable)) +
geom_point()+
stat_poly_line() +
stat_poly_eq(use_label(c("eq", "R2")))
ggplot(df_long[df_long$variable=="Crop_FluxDensity_mean_MgC.ha_CORRECT" | df_long$variable=="Graze_FluxDensity_mean_MgC.ha_CORRECT",],
aes(x=HDI, y=value, col=variable)) +
geom_point()+
stat_poly_line() +
stat_poly_eq(use_label("R2"))
names(df)
names(hdi)
df <- inner_join(tia, hdi[,-c("Country")], by="ISO3")
df <- inner_join(tia, hdi[,-"Country"], by="ISO3")
df <- inner_join(tia, hdi[,-2], by="ISO3")
head(df)
names(df) <- c("ISO3","NAME","Crop_total","Graze_total","Crop_flux","graze_flux","HDI_rank","HDI")
df_long <- reshape::melt(df, id.vars=c("ISO3", "NAME", "HDI"))
df_long$value <- as.numeric(df_long$value)
df_long$HDI <- as.numeric(df_long$HDI)
ggplot(df_long[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value, col=variable)) +
geom_point()+
stat_poly_line() +
stat_poly_eq(use_label("R2"))
ggplot(df_long[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value, col=variable)) +
geom_point()
unique(df_long$variable)
df_long <- reshape::melt(df, id.vars=c("ISO3", "NAME", "HDI", "HDI_rank"))
df_long$value <- as.numeric(df_long$value)
df_long$HDI <- as.numeric(df_long$HDI)
head(df_long)
ggplot(df_long[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI_rank, y=value, col=variable)) +
geom_point()
df_long$HDI_rank <- as.numeric(df_long$HDI_rank)
ggplot(df_long[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI_rank, y=value, col=variable)) +
geom_point()
ggplot(df_long[df_long$variable=="Crop_flux" | df_long$variable=="graze_flux",],
aes(x=HDI_rank, y=value, col=variable)) +
geom_point()
ggplot(df_long[df_long$variable=="Crop_flux" | df_long$variable=="graze_flux",],
aes(x=HDI_rank, y=value, col=variable)) +
geom_point()+
stat_poly_line() +
stat_poly_eq(use_label("R2"))
ggplot(df_long[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI_rank, y=value, col=variable)) +
geom_point()
ggplot(df_long[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI_rank, y=value, col=variable)) +
geom_point()+
stat_poly_line() +
stat_poly_eq(use_label("R2"))
ggplot(df_long[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI_rank, y=value, col=variable)) +
geom_point()+
stat_poly_line()
ggplot(df_long[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI_rank, y=value, col=variable)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label("R2"))
ggplot(df_long[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI_rank, y=value, col=variable)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label("R2"))+
facet_wrap(~variable)
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI_rank, y=value, col=variable)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label("R2"))+
facet_wrap(~variable)
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI_rank, y=value, col=variable)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label("R2"))+
facet_wrap(~variable, scales = "free")
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value, col=variable)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label("R2"))+
facet_wrap(~variable, scales = "free")
tia <- read.csv("02_17_2023/country_results_03172023.csv")
df <- inner_join(tia, hdi[,-2], by="ISO3")
head(df)
names(df)
tia <- tia[, c("ISO3","NAME","Crop_TotalC_sum_MgC","Graze_TotalC_sum_MgC",
"Crop_FluxDensity_mean_MgC.ha_CORRECT",
"Graze_FluxDensity_mean_MgC.ha_CORRECT","CropArea_sum_ha","GrazeArea_sum_ha",
"Crop_ForestCover_mean_percent_allDelta","Graze_ForestCover_mean_percent_allDelta",
"Crop_Delta_mean_percent" ,"Graze_Delta_mean_percent","Crop_ExpertRecs_mean_percent","Graze_ExpertRecs_mean_percent" )]
df <- inner_join(tia, hdi[,-2], by="ISO3")
#names(df) <- c("ISO3","NAME","Crop_total","Graze_total","Crop_flux","graze_flux","HDI_rank","HDI")
df_long <- reshape::melt(df, id.vars=c("ISO3", "NAME", "HDI", "Rank"))
df_long$value <- as.numeric(df_long$value)
df_long$HDI <- as.numeric(df_long$HDI)
df_long$HDI_rank <- as.numeric(df_long$HDI_rank)
df <- inner_join(tia, hdi[,-2], by="ISO3")
#names(df) <- c("ISO3","NAME","Crop_total","Graze_total","Crop_flux","graze_flux","HDI_rank","HDI")
df_long <- reshape::melt(df, id.vars=c("ISO3", "NAME", "HDI", "Rank"))
df_long$value <- as.numeric(df_long$value)
df_long$HDI <- as.numeric(df_long$HDI)
df_long$Rank <- as.numeric(df_long$Rank)
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value, col=variable)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label("R2"))+
facet_wrap(~variable, scales = "free")
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value, col=variable)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label("R2"))+
facet_wrap(~variable, scales = "free")+
theme(legend.position = "none")
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value, col=variable)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label("R2"))+
facet_wrap(~variable, scales = "free_y")+
theme(legend.position = "none")
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value, col=variable)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label(c("R2","p")))+
facet_wrap(~variable, scales = "free_y")+
theme(legend.position = "none")
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label(c("R2","p")))+
facet_wrap(~variable, scales = "free_y")+
theme(legend.position = "none")
?ggsave
ggsave("../HDI_draft.png",plot = last_plot(),
width = 12,
height = 12)
names(df)
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label(c("R2","p")))+
facet_wrap(~variable, scales = "free_y")+
theme(legend.position = "none", strip.text = element_text(size=10))+
label(xlab)
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label(c("R2","p")))+
facet_wrap(~variable, scales = "free_y")+
theme(legend.position = "none", strip.text = element_text(size=10))
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label(c("R2","p")))+
facet_wrap(~variable, scales = "free_y")+
theme(legend.position = "none", strip.text = element_text(size=10))+
ylab("")
ggsave("../HDI_draft.png",plot = last_plot(),
width = 12,
height = 12)
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label(c("R2","p")))+
facet_wrap(~variable, scales = "free_y")+
theme(legend.position = "none", strip.text = element_text(size=14))+
ylab("")
ggsave("../HDI_draft.png",plot = last_plot(),
width = 12,
height = 12)
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label(c("R2","p")))+
facet_wrap(~variable, scales = "free_y")+
theme(legend.position = "none", strip.text = element_text(size=12))+
ylab("")
ggsave("../HDI_draft.png",plot = last_plot(),
width = 12,
height = 12)
names(df)
#names(df) <- c("ISO3","NAME","Crop_total","Graze_total","Crop_flux","graze_flux","HDI_rank","HDI")
names(df) <- c("ISO3","NAME","Crop_TotalC_sum_MgC","Graze_TotalC_sum_MgC",
"Crop_FluxDensity_mean_MgC.ha.yr","Graze_FluxDensity_mean_MgC.ha.yr","CropArea_sum_ha","GrazeArea_sum_ha",
"Crop_ForestCover_mean_percent_allDelta" , "Graze_ForestCover_mean_percent_allDelta",
"Crop_Delta_mean_percent","Graze_Delta_mean_percent",
"Crop_ExpertRecs_mean_percent","Graze_ExpertRecs_mean_percent",
"Rank","HDI")
df_long <- reshape::melt(df, id.vars=c("ISO3", "NAME", "HDI", "Rank"))
df_long$value <- as.numeric(df_long$value)
df_long$HDI <- as.numeric(df_long$HDI)
df_long$Rank <- as.numeric(df_long$Rank)
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label(c("R2","p")))+
facet_wrap(~variable, scales = "free_y")+
theme(legend.position = "none", strip.text = element_text(size=12))+
ylab("")
ggsave("../HDI_draft.png",plot = last_plot(),
width = 12,
height = 12)
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label(c("R2","p")))+
facet_wrap(~variable, scales = "free_y")+
theme(legend.position = "none", strip.text = element_text(size=11))+
ylab("")
ggsave("../HDI_draft.png",plot = last_plot(),
width = 12,
height = 12)
ggsave("../HDI_draft.png",plot = last_plot(),
width = 14,
height = 12)
tia <- tia[, c("ISO3","NAME","Crop_TotalC_sum_MgC","Graze_TotalC_sum_MgC",
"Crop_FluxDensity_mean_MgC.ha_CORRECT",
"Graze_FluxDensity_mean_MgC.ha_CORRECT","CropArea_sum_ha","GrazeArea_sum_ha",
"Crop_ForestCover_mean_percent_positiveDelta","Graze_ForestCover_mean_percent_positiveDelta",
"Crop_Delta_mean_percent" ,"Graze_Delta_mean_percent","Crop_ExpertRecs_mean_percent","Graze_ExpertRecs_mean_percent" )]
names(tia)
tia <- read.csv("02_17_2023/country_results_03172023.csv")
tia <- tia[, c("ISO3","NAME","Crop_TotalC_sum_MgC","Graze_TotalC_sum_MgC",
"Crop_FluxDensity_mean_MgC.ha_CORRECT",
"Graze_FluxDensity_mean_MgC.ha_CORRECT","CropArea_sum_ha","GrazeArea_sum_ha",
"Crop_ForestCover_mean_percent_positiveDelta","Graze_ForestCover_mean_percent_positiveDelta",
"Crop_Delta_mean_percent" ,"Graze_Delta_mean_percent","Crop_ExpertRecs_mean_percent","Graze_ExpertRecs_mean_percent" )]
df <- inner_join(tia, hdi[,-2], by="ISO3")
#names(df) <- c("ISO3","NAME","Crop_total","Graze_total","Crop_flux","graze_flux","HDI_rank","HDI")
names(df) <- c("ISO3","NAME","Crop_TotalC_sum_MgC","Graze_TotalC_sum_MgC",
"Crop_FluxDensity_mean_MgC.ha.yr","Graze_FluxDensity_mean_MgC.ha.yr","CropArea_sum_ha","GrazeArea_sum_ha",
"Crop_ForestCover_mean_percent_allDelta" , "Graze_ForestCover_mean_percent_allDelta",
"Crop_Delta_mean_percent","Graze_Delta_mean_percent",
"Crop_ExpertRecs_mean_percent","Graze_ExpertRecs_mean_percent",
"Rank","HDI")
df_long <- reshape::melt(df, id.vars=c("ISO3", "NAME", "HDI", "Rank"))
df_long$value <- as.numeric(df_long$value)
df_long$HDI <- as.numeric(df_long$HDI)
df_long$Rank <- as.numeric(df_long$Rank)
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label(c("R2","p")))+
facet_wrap(~variable, scales = "free_y")+
theme(legend.position = "none", strip.text = element_text(size=11))+
ylab("")
tia <- read.csv("02_17_2023/country_results_03172023.csv")
tia <- tia[, c("ISO3","NAME","Crop_TotalC_sum_MgC","Graze_TotalC_sum_MgC",
"Crop_FluxDensity_mean_MgC.ha_CORRECT",
"Graze_FluxDensity_mean_MgC.ha_CORRECT","CropArea_sum_ha","GrazeArea_sum_ha",
"Crop_ForestCover_mean_percent_positiveDelta","Graze_ForestCover_mean_percent_positiveDelta",
"Crop_ForestCover_mean_percent_allDelta" , "Graze_ForestCover_mean_percent_allDelta",
"Crop_Delta_mean_percent" ,"Graze_Delta_mean_percent","Crop_ExpertRecs_mean_percent","Graze_ExpertRecs_mean_percent" )]
df <- inner_join(tia, hdi[,-2], by="ISO3")
#names(df) <- c("ISO3","NAME","Crop_total","Graze_total","Crop_flux","graze_flux","HDI_rank","HDI")
names(df) <- c("ISO3","NAME","Crop_TotalC_sum_MgC","Graze_TotalC_sum_MgC",
"Crop_FluxDensity_mean_MgC.ha.yr","Graze_FluxDensity_mean_MgC.ha.yr","CropArea_sum_ha","GrazeArea_sum_ha",
"Crop_ForestCover_mean_percent_positiveDelta","Graze_ForestCover_mean_percent_positiveDelta",
"Crop_ForestCover_mean_percent_allDelta" , "Graze_ForestCover_mean_percent_allDelta",
"Crop_Delta_mean_percent","Graze_Delta_mean_percent",
"Crop_ExpertRecs_mean_percent","Graze_ExpertRecs_mean_percent",
"Rank","HDI")
df_long <- reshape::melt(df, id.vars=c("ISO3", "NAME", "HDI", "Rank"))
df_long$value <- as.numeric(df_long$value)
df_long$HDI <- as.numeric(df_long$HDI)
df_long$Rank <- as.numeric(df_long$Rank)
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label(c("R2","p")))+
facet_wrap(~variable, scales = "free_y")+
theme(legend.position = "none", strip.text = element_text(size=11))+
ylab("")
ggsave("../HDI_draft.png",plot = last_plot(),
width = 14,
height = 14)
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label(c("p")))+
facet_wrap(~variable, scales = "free_y")+
theme(legend.position = "none", strip.text = element_text(size=11))+
ylab("")
ggsave("../HDI_draft.png",plot = last_plot(),
width = 14,
height = 14)
ggplot(df_long,#[df_long$variable=="Crop_total" | df_long$variable=="Graze_total",],
aes(x=HDI, y=value)) +
geom_point()+
stat_poly_line()+
stat_poly_eq(use_label(c("R2","p")))+
facet_wrap(~variable, scales = "free_y")+
theme(legend.position = "none", strip.text = element_text(size=11))+
ylab("")
ggsave("../HDI_draft.png",plot = last_plot(),
width = 14,
height = 14)
